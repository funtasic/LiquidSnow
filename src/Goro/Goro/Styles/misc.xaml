<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Thismaker.Goro">
    <!--Tooltop Style-->
    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="{DynamicResource AccentDarkDynamic}"/>
    </Style>

    

    <!--#region Progbar-->
    <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinHeight="14"
                          MinWidth="200"
                          Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                     Storyboard.TargetName="PART_Indicator"
                                                     Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush>Transparent</SolidColorBrush>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        
                        <Border x:Name="PART_Track"
                                BorderThickness="1"/>
                        <Border x:Name="PART_Indicator"
                                BorderThickness="1"
                                HorizontalAlignment="Left"
                                Background="{TemplateBinding Foreground}"
                                >
                            <Grid ClipToBounds="True" x:Name="Animation">

                                <Rectangle x:Name="PART_GlowRect" 
                                           Width="100"
                                           HorizontalAlignment="Left" 
                                           Fill="{TemplateBinding Foreground}" 
                                           Margin="-100,0,0,0" />
                            </Grid>
                        </Border>
                        
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource PanelHighlight}"/>
        <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
    </Style>
    <!--#endregion-->
    
    <!--#region Context Menu and Menus-->
    <Style TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderThickness="1" 
                            Background="{TemplateBinding Background}">
                        <StackPanel ClipToBounds="True" 
                                    Orientation="Horizontal" 
                                    IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Background" Value="{DynamicResource PanelBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentDisabled}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <StackPanel IsItemsHost="True" 
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="10,4,10,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border 
                        BorderBrush="{DynamicResource AccentDisabled}" BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" Margin="4">
            <Grid>
                <ContentPresenter Margin="6,3,6,3" 
                                  ContentSource="Header"
                                  RecognizesAccessKey="True" >
                    <ContentPresenter.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Path=Foreground}"/>
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                <Popup Name="Popup" 
                       Placement="Bottom" 
                       IsOpen="{TemplateBinding IsSubmenuOpen}" 
                       AllowsTransparency="True" 
                       Focusable="False" 
                       PopupAnimation="Fade">
                    <Border Name="SubmenuBorder" 
                            SnapsToDevicePixels="True"  
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource AccentDisabled}"
                            BorderThickness="1">
                        <ScrollViewer CanContentScroll="True" 
                                      VerticalScrollBarVisibility="Hidden" 
                                      Background="{DynamicResource PanelBackground}">
                            <StackPanel  IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PanelHighlight}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource AccentDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
                     TargetType="{x:Type MenuItem}">
        <Border Name="Border" Background="{TemplateBinding Background}" >
            <Grid>
                <ContentPresenter  Margin="6,3,6,3" 
                                  ContentSource="Header" 
                                  RecognizesAccessKey="True" >
                    <ContentPresenter.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Path=Foreground}"/>
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PanelHighlight}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource AccentDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" Background="Transparent">
            <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" MinWidth="100"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <local:SymbolIcon Margin="6 0" x:Name="Icon" Icon="{Binding Path=(local:ControlExtensions.Icon), 
                    RelativeSource={RelativeSource AncestorType=MenuItem}}"/>
                <Ellipse x:Name="Check"
                         SnapsToDevicePixels="False" 
                         Width="12" Height="12"
                         Visibility="Hidden"
                         Margin="6 0"
                         Stroke="{DynamicResource PanelForeground}"/>
                <Ellipse x:Name="CheckMark" 
                         Width="7" Height="7" 
                         Visibility="Hidden" 
                          SnapsToDevicePixels="False" 
                          Fill="{DynamicResource PanelForeground}" 
                          StrokeThickness="2" />
                <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True"
                                  VerticalAlignment="Center">
                    <ContentPresenter.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Path=Foreground}"/>
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                <TextBlock x:Name="InputGestureText" 
                           Grid.Column="2"
                           FontSize="12"
                           VerticalAlignment="Center"
                           Foreground="{TemplateBinding Foreground}"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="10,2,0,2"
                           DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="local:ControlExtensions.Icon" Value="None">
                <Setter Property="Visibility" TargetName="Icon" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PanelHighlight}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource AccentDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" VerticalAlignment="Center" >
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <local:SymbolIcon Margin="6 0" x:Name="Icon" Icon="{Binding Path=(local:ControlExtensions.Icon), 
                    RelativeSource={RelativeSource AncestorType=MenuItem}}"/>
                <ContentPresenter Name="HeaderHost"
                                  Grid.Column="1"
                                  ContentSource="Header"
                                  RecognizesAccessKey="True">
                    <ContentPresenter.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=MenuItem}, Path=Foreground}"/>
                        </Style>
                    </ContentPresenter.Resources>
                </ContentPresenter>
                <TextBlock x:Name="InputGestureText"
                           Grid.Column="2"
                           Text="{TemplateBinding InputGestureText}"
                           Margin="5,2,2,2"
                           DockPanel.Dock="Right"/>
                <Path x:Name="Arrow" Grid.Column="3"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 0 7 L 4 3.5 Z" 
                      Fill="{DynamicResource PanelForeground}" />
                <Popup Name="Popup"
                       Placement="Right"
                       HorizontalOffset="-4" 
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True" 
                       Focusable="False"
                       PopupAnimation="Fade">
                    <Border Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            Background="{DynamicResource PanelBackground}"
                            BorderBrush="{DynamicResource AccentDisabled}"
                            BorderThickness="1" >
                        <ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                            <StackPanel  IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="local:ControlExtensions.Icon" Value="None">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource PanelHighlight}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Accent}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource AccentDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="MinHeight" Value="27"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="local:ControlExtensions.Icon" Value="None"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
</ResourceDictionary>