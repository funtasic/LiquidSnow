<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Thismaker.Goro"
                    xmlns:System="clr-namespace:System;assembly=System.Memory">
    
    <!--Resources-->
    <local:ColorSaturationConverter x:Key="colorConverter"/>

    <!--#region TextBox-->
    <Style TargetType="{x:Type TextBoxBase}">
        <Setter Property="BorderBrush" Value="{DynamicResource PanelForeground}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource PanelForeground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PanelForeground}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource Accent}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="SelectionOpacity" Value="0.4"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="local:InputMonitor.IsMonitoring" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="header" Text="{Binding Path=(local:ControlExtensions.Header), 
                            RelativeSource={RelativeSource TemplatedParent}}" Margin="{DynamicResource HeaderMargin}"/>
                        <Border 
                            Grid.Row="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="{DynamicResource CornerRadius}"
                            Background="{TemplateBinding Background}"
                            MinHeight="{TemplateBinding MinHeight}" 
                            Height="{TemplateBinding Height}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            x:Name="border" 
                             SnapsToDevicePixels="True">
                            <Grid Margin="10 0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <TextBlock x:Name="placeholder"  Text="{Binding Path=(local:ControlExtensions.PlaceholderText), 
                                RelativeSource={RelativeSource TemplatedParent}}"
                                           FontSize="{TemplateBinding FontSize}"
                                           FontStyle="Italic"
                                           Foreground="{Binding SelectionBrush,
                                    RelativeSource={RelativeSource TemplatedParent},
                                    Converter={StaticResource colorConverter},
                                    ConverterParameter='W'}"
                                           Visibility="Collapsed"/>
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Auto" />
                            </Grid>
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="local:InputMonitor.IsEmpty" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="placeholder"/>
                        </Trigger>
                        <Trigger Property="local:ControlExtensions.Header" Value="">
                            <Setter Property="Visibility" TargetName="header" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="local:ControlExtensions.Header" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="header" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{DynamicResource InactiveOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding SelectionBrush, 
                                RelativeSource={RelativeSource TemplatedParent}, 
                                Converter={StaticResource colorConverter}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding SelectionBrush, 
                                RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding SelectionBrush, 
                                RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource AccentLight}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Style.BasedOn>
            <StaticResource ResourceKey="{x:Type TextBoxBase}"/>
        </Style.BasedOn>
    </Style>

    <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource PanelForeground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PanelForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource Accent}"/>
        <Setter Property="SelectionOpacity" Value="0.4"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="local:InputMonitor.IsMonitoring" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <StackPanel>
                        <TextBlock x:Name="header" Text="{Binding Path=(local:ControlExtensions.Header), 
                            RelativeSource={RelativeSource TemplatedParent}}" Margin="{DynamicResource HeaderMargin}"/>
                        <Border 
                            CornerRadius="{DynamicResource CornerRadius}"
                            Background="{TemplateBinding Background}"
                            MinHeight="{TemplateBinding MinHeight}" 
                            Height="{TemplateBinding Height}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            
                            BorderThickness="1" SnapsToDevicePixels="True">
                            <Grid Margin="10 0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <TextBlock x:Name="placeholder"  Text="{Binding Path=(local:ControlExtensions.PlaceholderText), 
                                RelativeSource={RelativeSource TemplatedParent}}"
                                           FontSize="{TemplateBinding FontSize}"
                                           FontStyle="Italic"
                                            Foreground="{Binding SelectionBrush,
                                    RelativeSource={RelativeSource TemplatedParent},
                                    Converter={StaticResource colorConverter},
                                    ConverterParameter='W'}"
                                           Visibility="Collapsed"
                                           />
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Auto" 
                                      />
                            </Grid>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="local:ControlExtensions.Header" Value="">
                            <Setter Property="Visibility" TargetName="header" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="local:ControlExtensions.Header" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="header" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="local:InputMonitor.IsEmpty" Value="True">
                            <Setter Property="Visibility" TargetName="placeholder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="{DynamicResource InactiveOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding SelectionBrush, 
                                RelativeSource={RelativeSource TemplatedParent}, 
                                Converter={StaticResource colorConverter}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding SelectionBrush, 
                                RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{Binding SelectionBrush, 
                                RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource AccentLight}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region RichtextBox-->
    
    
    <Style TargetType="{x:Type RichTextBox}">
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Style.Resources>
            <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
            </Style>
            <Style x:Key="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
                <Setter Property="Foreground" Value="{DynamicResource Accent}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Foreground" Value="Blue"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Style.BasedOn>
            <StaticResource ResourceKey="{x:Type TextBoxBase}"/>
        </Style.BasedOn>
    </Style>
    <!--#endregion-->
    
    <!--#region TextBlock-->
   
    <Style x:Key="Header" TargetType="{x:Type TextBlock}">
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="FontWeight" Value="ExtraLight"/>
        <Setter Property="FontSize" Value="46px"/>
        <Setter Property="Foreground" Value="{DynamicResource PanelForeground}"/>
    </Style>
    
    <Style x:Key="SubHeader" TargetType="{x:Type TextBlock}">
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="FontWeight" Value="ExtraLight"/>
        <Setter Property="FontSize" Value="32px"/>
        <Setter Property="Foreground" Value="{DynamicResource PanelForeground}"/>
    </Style>
    
    <Style x:Key="Title" TargetType="{x:Type TextBlock}">
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="FontWeight" Value="Thin"/>
        <Setter Property="FontSize" Value="24px"/>
        <Setter Property="Foreground" Value="{DynamicResource PanelForeground}"/>
    </Style>
    
    <Style x:Key="Subtitle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="FontSize" Value="20px"/>
        <Setter Property="Foreground" Value="{DynamicResource PanelForeground}"/>
    </Style>
    
    <Style x:Key="Base" TargetType="{x:Type TextBlock}">
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14px"/>
        <Setter Property="Foreground" Value="{DynamicResource PanelForeground}"/>
    </Style>
    
    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="Foreground" Value="{DynamicResource PanelForeground}"/>
        <Setter Property="FontSize" Value="14px"/>
    </Style>
    <Style x:Key="Caption" TargetType="{x:Type TextBlock}">
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="FontSize" Value="12px"/>
        <Setter Property="Foreground" Value="{DynamicResource PanelForeground}"/>
    </Style>
    <!--#endregion-->
    
    <!--#region ComboBox-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid MinHeight="28">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border 
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="{DynamicResource CornerRadius}"
                  BorderThickness="1" 
                  BorderBrush="{DynamicResource PanelForeground}"/>
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="Transparent"
                  BorderBrush="White"
                  BorderThickness="0,0,0,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{DynamicResource PanelForeground}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentLight}" />
                
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Accent}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource Accent}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource InactiveOpacity}"/>
            </Trigger>
            </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <Style  TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="header" Text="{Binding Path=(local:ControlExtensions.Header), 
                            RelativeSource={RelativeSource TemplatedParent}}" Margin="{DynamicResource HeaderMargin}"/>
                        <Grid Grid.Row="1">
                            <ToggleButton 
                            Name="ToggleButton" 
                                MinHeight="{TemplateBinding MinHeight}"
                            Template="{DynamicResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="10,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{DynamicResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Background="Transparent"
                            Foreground="{DynamicResource PanelForeground}"
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="{DynamicResource PanelBackground}"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource PanelForeground}"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="local:ControlExtensions.Header" Value="">
                            <Setter TargetName="header" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="local:ControlExtensions.Header" Value="{x:Null}">
                            <Setter TargetName="header" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource AccentDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource PanelHighlight}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource AccentDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--DatePicker -->
    
    <!--#region  DatePicker-->
    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
</ResourceDictionary>