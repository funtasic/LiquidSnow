<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Thismaker.Goro">

    <local:IconConverter x:Key="iconConverter"/>
    <local:ColorSaturationConverter x:Key="colorConverter"/>
    
    <Style TargetType="{x:Type local:StatusIndicator}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Foreground" Value="{DynamicResource PanelForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:StatusIndicator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <local:SymbolIcon Foreground="{TemplateBinding Foreground}" Icon="{TemplateBinding Status, Converter={StaticResource iconConverter}, ConverterParameter='Status'}" 
                                              Design="{TemplateBinding Design}"
                                              Height="{TemplateBinding Height}"
                                              Width="{TemplateBinding Width}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ButtonIcon}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Design" Value="{DynamicResource DefaultDesign}"/>
        <Setter Property="Foreground" Value="{DynamicResource PanelForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Highlight" Value="{DynamicResource Accent}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ButtonIcon}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="backGrid" 
                                  Opacity="0.2" 
                                  Grid.RowSpan="3" Grid.ColumnSpan="3"/>
                            <local:SymbolIcon Grid.Row="1" Grid.Column="1" 
                                              Icon="{TemplateBinding Icon}" 
                                              Design="{TemplateBinding Design}"
                                              Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="backGrid" Property="Background" 
                                    Value="{Binding Highlight, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource colorConverter}}"/>
                            <Setter Property="Foreground" 
                                    Value="{Binding Highlight, RelativeSource={RelativeSource Self}, Converter={StaticResource colorConverter}}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{Binding Highlight, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="backGrid" Property="Background" Value="{Binding Highlight, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource PanelSecondary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:CheckboxIcon}">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Design" Value="{DynamicResource DefaultDesign}"/>
        <Setter Property="Foreground" Value="{DynamicResource PanelForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Highlight" Value="{DynamicResource Accent}"/>
        <Setter Property="IsHitTestVisible" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CheckboxIcon}">
                    <Border Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Grid x:Name="backGrid" 
                                  Opacity="0.2" 
                                  Grid.RowSpan="3" Grid.ColumnSpan="3"/>
                            <local:SymbolIcon x:Name="Icon" Grid.Row="1" Grid.Column="1" 
                                              Icon="{TemplateBinding Icon}"
                                              Design="{TemplateBinding Design}"
                                              Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="backGrid" Property="Background" 
                                    Value="{Binding Highlight, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource colorConverter}}"/>
                            <Setter Property="Foreground" 
                                    Value="{Binding Highlight, RelativeSource={RelativeSource Self}, Converter={StaticResource colorConverter}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{Binding Highlight, RelativeSource={RelativeSource Self}}"/>
                            <Setter TargetName="backGrid" Property="Background" Value="{Binding Highlight, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource PanelSecondary}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SymbolIcon}">
        <Setter Property="Foreground" Value="{DynamicResource PanelForeground}"/>
        <Setter Property="Design" Value="{DynamicResource DefaultDesign}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SymbolIcon}">
                    <Grid Visibility="Visible" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <Rectangle x:Name="PartSvg"  Grid.Row="1" Fill="{TemplateBinding Foreground}" 
                                   OpacityMask="{TemplateBinding Icon, Converter={StaticResource iconConverter},ConverterParameter={x:Static local:IconDesign.MaterialDesign}}"/>
                        <Viewbox x:Name="PartFont" Visibility="Collapsed">
                            <TextBlock TextAlignment="Center" Foreground="{TemplateBinding Foreground}" FontFamily="Segoe MDL2 Assets"
                                   Text="{TemplateBinding Icon,Converter={StaticResource iconConverter}, ConverterParameter={x:Static local:IconDesign.Segoe}}"
                                   />
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Design" Value="Segoe">
                            <Setter Property="Visibility" TargetName="PartFont" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="PartSvg" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:GTextBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource PanelForeground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PanelForeground}"/>
        <Setter Property="Background" Value="{DynamicResource PanelBackground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinHeight" Value="36"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource Accent}"/>
        <Setter Property="SelectionOpacity" Value="0.4"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GTextBox}">
                    <StackPanel>
                        <TextBlock x:Name="header" Margin="{DynamicResource HeaderMargin}" Text="{TemplateBinding Header}"/>
                        <Border 
                            CornerRadius="{DynamicResource CornerRadius}"
                            MinHeight="{TemplateBinding MinHeight}" 
                            Height="{TemplateBinding Height}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                            x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            
                            BorderThickness="1" SnapsToDevicePixels="True">
                            <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                  Margin="10 0">
                                <TextBlock x:Name="placeholder" Text="{TemplateBinding PlaceholderText}" 
                                           FontSize="{TemplateBinding FontSize}"
                                           FontStyle="Italic"
                                           Foreground="{DynamicResource AccentDisabled}"
                                           Visibility="Collapsed"/>
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" 
                                      HorizontalScrollBarVisibility="Hidden" 
                                      VerticalScrollBarVisibility="Auto" 
                                      />
                            </Grid>

                        </Border>
                    </StackPanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="{DynamicResource InactiveOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentLight}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Accent}"/>
                            <Setter Property="Visibility" TargetName="placeholder" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" TargetName="placeholder" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Header" Value="">
                            <Setter Property="Visibility" TargetName="header" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="header" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource AccentLight}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
